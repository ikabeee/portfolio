---
import { navItems } from "../constants/navItems";
---

<header class="border-[#363C49] border-b-2 fixed top-0 w-full p-4 lg:p-6 bg-base-100 z-50 backdrop-blur-sm">
    <nav class="flex flex-row max-w-screen-xl justify-between items-center mx-auto">
        <!-- Logo -->
        <a class="transition-colors duration-200 hover:text-[#569CDE]" href="/">
            <h1 class="text-lg md:text-xl lg:text-2xl font-bold">Carlos Gonzalez</h1>
        </a>

        <!-- Desktop Navigation -->
        <ul class="hidden lg:flex gap-4 xl:gap-6 text-base lg:text-lg font-medium">
            {
                navItems.map((item) => (
                    <li>
                        <a class="transition-colors duration-200 hover:text-[#569CDE] px-2 lg:px-3 py-2 rounded-lg hover:bg-[#569CDE]/10" href={item.href}>
                            {item.name}
                        </a>
                    </li>
                ))
            }
        </ul>

        <!-- Mobile Menu Button -->
        <button 
            id="mobile-menu-button"
            class="lg:hidden flex flex-col justify-center items-center w-8 h-8 space-y-1.5 transition-all duration-300 hover:cursor-pointer"
            aria-label="Toggle menu"
        >
            <span class="block w-6 h-0.5 bg-current transition-all duration-300 mobile-menu-line-1"></span>
            <span class="block w-6 h-0.5 bg-current transition-all duration-300 mobile-menu-line-2"></span>
            <span class="block w-6 h-0.5 bg-current transition-all duration-300 mobile-menu-line-3"></span>
        </button>
    </nav>

    <!-- Mobile Navigation Menu -->
    <div 
        id="mobile-menu"
        class="lg:hidden absolute top-full left-0 right-0 bg-base-100 border-t border-[#363C49] transform -translate-y-full opacity-0 invisible transition-all duration-300"
    >
        <ul class="flex flex-col p-4 space-y-2">
            {
                navItems.map((item) => (
                    <li>
                        <a 
                            class="block px-4 py-3 rounded-lg transition-colors duration-200 hover:text-[#569CDE] hover:bg-[#569CDE]/10 text-lg font-medium"
                            href={item.href}
                        >
                            {item.name}
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</header>

<script>

    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const line1 = document.querySelector('.mobile-menu-line-1');
    const line2 = document.querySelector('.mobile-menu-line-2');
    const line3 = document.querySelector('.mobile-menu-line-3');
    
    let isMenuOpen = false;

    mobileMenuButton?.addEventListener('click', () => {
        isMenuOpen = !isMenuOpen;
        
        if (isMenuOpen) {

            mobileMenu?.classList.remove('-translate-y-full', 'opacity-0', 'invisible');
            mobileMenu?.classList.add('translate-y-0', 'opacity-100', 'visible');
            
            // Animate hamburger to X
            line1?.classList.add('rotate-45', 'translate-y-2');
            line2?.classList.add('opacity-0');
            line3?.classList.add('-rotate-45', '-translate-y-2');
        } else {

            mobileMenu?.classList.add('-translate-y-full', 'opacity-0', 'invisible');
            mobileMenu?.classList.remove('translate-y-0', 'opacity-100', 'visible');
            
            line1?.classList.remove('rotate-45', 'translate-y-2');
            line2?.classList.remove('opacity-0');
            line3?.classList.remove('-rotate-45', '-translate-y-2');
        }
    });


    const mobileLinks = mobileMenu?.querySelectorAll('a');
    mobileLinks?.forEach(link => {
        link.addEventListener('click', () => {
            if (isMenuOpen) {
                mobileMenuButton?.click(); 
            }
        });
    });

    document.addEventListener('click', (e) => {
        const target = e.target as Node;
        if (isMenuOpen && !mobileMenuButton?.contains(target) && !mobileMenu?.contains(target)) {
            mobileMenuButton?.click();
        }
    });
</script>